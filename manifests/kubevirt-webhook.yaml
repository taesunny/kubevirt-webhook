apiVersion: v1
kind: Service
metadata:
 name: kubevirt-webhook
 namespace: kubevirt-system
 labels:
    app: kubevirt-webhook
spec:
 ports:
 - name: webhook
    port: 443
    targetPort: 8443
 selector:
    app: kubevirt-webhook
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
 name: kubevirt-webhook
 namespace: kubevirt-system
 labels:
    app: kubevirt-webhook
spec:
 replicas: 1
 template:
    metadata:
     name: kubevirt-webhook
     labels:
       app: kubevirt-webhook
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - kubevirt-webhook
            topologyKey: kubernetes.io/hostname
    containers:
      - name: webhook
        image: kubevirt-webhook:latest # make sure to build and tag the image first!
        args:
        - -tlsCertFile=/etc/webhook/certs/cert.pem
        - -tlsKeyFile=/etc/webhook/certs/key.pem
        - -customNotReadyTolerationSeconds=100
        - -customUnreachableTolerationSeconds=200
        resources:
          limits:
            memory: 100Mi
            cpu: 500m
          requests:
            memory: 100Mi
            cpu: 500m
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
        securityContext:
          readOnlyRootFilesystem: true
     volumes:
       - name: webhook-certs
         secret:
           secretName: kubevirt-webhook-certs
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: kubevirt-webhook
  labels:
    app: kubevirt-webhook
webhooks:
- name: kubevirt-webhook.kubevirt-system.svc
  clientConfig:
    service:
      name: kubevirt-webhook
      namespace: kubevirt-system
      path: "/mutate"
    caBundle: <CA_BUNDLE>
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]